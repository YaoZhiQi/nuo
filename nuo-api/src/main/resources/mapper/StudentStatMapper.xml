<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yinuo.mapper.StudentStatMapper">

	<resultMap id="studentStatMap" type="StudentStat">
		<result property="id" column="pk_id" />
		<result property="subject" column="subject" />
		<result property="studentId" column="fk_student_id" />
		<result property="highScore" column="high_score" />
		<result property="averageScore" column="average_score" />
		<result property="medianScore" column="median_score" />
		<result property="createTime" column="create_time" />
	</resultMap>
	
    <insert id="insert" parameterType="StudentStat" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO t_student_stat(`fk_student_id`, `subject`, `high_score`, `average_score`,
		 `median_score`, `create_time`)
		VALUES(#{studentId}, #{subject}, #{highScore}, #{averageScore}, #{medianScore}, #{createTime})
	</insert>
	<select id="selectOne" parameterType="Map" resultMap="studentStatMap">
		SELECT * 
		FROM t_student_stat
		WHERE pk_id = #{id}
	</select>
	
	<select id="selectListByPage" parameterType="Map" resultMap="studentStatMap">
        SELECT * 
        FROM t_student_stat
        order by pk_id desc
        LIMIT #{limit}
        OFFSET #{offset}
    </select>
    <select id="selectListByIds" parameterType="Map" resultMap="studentStatMap">
        SELECT * 
        FROM t_student_stat
        WHERE pk_id IN
	    <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
	        #{item}
	    </foreach>
    </select>
    <select id="countListByIds" parameterType="Map" resultType="Integer">
        SELECT count(1)
        FROM t_student_stat
        WHERE pk_id IN
	    <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
	        #{item}
	    </foreach>
    </select>
	
	<update id="update" parameterType="StudentStat">
		UPDATE t_student_stat
		SET `fk_student_id` = #{studentId},
		`subject` = #{subject},
		`high_score` = #{highScore},
		`median_score` = #{medianScore},
		`average_score` = #{averageScore},
		`create_time` = #{createTime}
		WHERE pk_id = #{id}
	</update>

	<delete id="delete" parameterType="Map">
		delete from t_student_stat
		where pk_id = #{id}
	</delete>
	
	<delete id="deleteAll">
		delete from t_student_stat
    </delete>
	<select id="selectByStudentId" parameterType="Map" resultMap="studentStatMap">
		SELECT *
		FROM t_student_stat
		WHERE fk_student_id = #{studentId}
		<if test="subject > 0">
			and `subject` = #{subject}
		</if>
		limit #{limit} offset #{offset}
	</select>
	<select id="countByStudentId" parameterType="Map" resultType="Integer">
		SELECT count(1)
		FROM t_student_stat
		WHERE fk_student_id = #{studentId}
		<if test="subject > 0">
			and `subject` = #{subject}
		</if>
	</select>

	<delete id="deleteByStudentId" parameterType="Map">
		delete from t_student_stat
		where `fk_student_id` = #{studentId}
		and `subject` = #{subject}
	</delete>
</mapper>